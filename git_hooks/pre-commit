#!/bin/sh
#
# This script prevents specific file modifications from taking place.
# We want certain config files checked into git so that builds work on a clone,
# *and* we need to modify these files locally to enable debug options.
# This leads to a scenario where we can accidentally check in the config files
# with our local debug options checked in. This script prevents that.

### Get current revision to check against.
if git rev-parse --verify HEAD >/dev/null 2>&1
then
  against=HEAD
else
  # Initial commit: diff against an empty tree object
  against="$(git hash-object -t tree /dev/null)"
fi

# Redirect output to stderr.
exec 1>&2

# Test staged files against the files we don't want to check in,
# and abort if found.
git diff --cached --name-only "$against" | while read -r file; do
    while read -r ignoredFile; do
	if test "$file" == "$ignoredFile";
	then
	    echo "You are trying to commit files that appear in .gitignore and this is not allowed because some of they contain sensitive information."
	    echo "The affected files is: ${file} and it appears as ${ignoredFile}"
	    echo "Please remove them from .gitignore if you really want to commit them."
	    exit 1
	fi
    done < .gitignore
done
